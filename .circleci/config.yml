version: 2

variables:

  bootstrap-venv-py35: &bootstrap-venv-py35
    run:
      name: Create Python environment
      command: |
        ../miniconda3/bin/conda create -n py35 python=3.5 2> /dev/null || true
        ../miniconda3/envs/py35/bin/python -m venv venv-py35
        . venv-py35/bin/activate
        pip install -r requirements-dev.txt

  bootstrap-venv-py36: &bootstrap-venv-py36
    run:
      name: Create Python environment
      command: |
        ../miniconda3/bin/conda create -n py36 python=3.6 2> /dev/null || true
        ../miniconda3/envs/py36/bin/python -m venv venv-py36
        . venv-py36/bin/activate
        pip install -r requirements-dev.txt

  bootstrap-linux: &bootstrap-linux
    run:
      name: bootstrap linux
      command: |
        apt update
        apt install -y pkg-config zip g++ zlib1g-dev unzip python3 cmake curl git rsync

        curl -OL https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash Miniconda3-latest-Linux-x86_64.sh -b -f

        ../miniconda3/bin/conda create -n py35 python=3.5 2> /dev/null || true
        ../miniconda3/envs/py35/bin/python -m venv venv-py35
        . venv-py35/bin/activate
        pip install -r requirements-dev.txt

        ../miniconda3/bin/conda create -n py36 python=3.6 2> /dev/null || true
        ../miniconda3/envs/py36/bin/python -m venv venv-py36
        . venv-py36/bin/activate
        pip install -r requirements-dev.txt

  bootstrap-macos: &bootstrap-macos
    run:
      name: Bootstrap macOS
      command: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew tap bazelbuild/tap
        HOMEBREW_NO_AUTO_UPDATE=1 brew install bazelbuild/tap/bazel
        HOMEBREW_NO_AUTO_UPDATE=1 brew install gmp
        HOMEBREW_NO_AUTO_UPDATE=1 brew install mmv

        curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
        bash Miniconda3-latest-MacOSX-x86_64.sh -b -f

jobs:

  # build-linux:
  #   docker:
  #     - image: tfencrypted/tf-big:0.1.0
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - run:
  #         name: run tests
  #         command: |
  #           . /venv-py35/bin/activate
  #           export LD_LIBRARY_PATH=/usr/local
  #           make clean
  #           make test
  #     - run:
  #         name: build pip
  #         command: |
  #           . /venv-py35/bin/activate
  #           make clean
  #           make build
  #           . /venv-py36/bin/activate
  #           make clean
  #           make build

  #           for filename in artifacts/*; do
  #             auditwheel repair $filename
  #           done
  #     - store_artifacts:
  #         path: wheelhouse

  test-macos:
    macos:
        xcode: "10.0.0"
    parameters:
      pyenv-activate-cmd:
        type: string
      tensorflow-version:
        type: string
    working_directory: ~/repo
    steps:
      - checkout
      - *bootstrap-macos
      - *bootstrap-venv-py35
      - *bootstrap-venv-py36
      - run:
          name: Run Bazel tests
          command: |
            . << parameters.pyenv-activate-cmd >>
            pip install -U tensorflow==<< parameters.tensorflow-version >>
            make clean
            make test

  # test-macos-py35:
  #   macos:
  #       xcode: "10.0.0"
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - *bootstrap-macos
  #     - *bootstrap-venv-py35
  #     - run:
  #         name: Run Bazel tests
  #         command: |
  #           . venv-py35/bin/activate
  #           pip install -U tensorflow==1.13.1
  #           make clean
  #           make test

  # test-macos-py36:
  #   macos:
  #       xcode: "10.0.0"
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - *bootstrap-macos
  #     - *bootstrap-venv-py36
  #     - run:
  #         name: Run Bazel tests
  #         command: |
  #           . venv-py36/bin/activate
  #           make clean
  #           make test

  # build-package-macos-py35:
  #   macos:
  #       xcode: "10.0.0"
  #   working_directory: ~/repo
  #   parameters:
  #     pyenv-activate-cmd:
  #       type: string
  #   steps:
  #     - checkout
  #     - *bootstrap-macos
  #     - *bootstrap-venv-py35
  #     - run:
  #         name: Build package
  #         command: |
  #           . << parameters.pyenv-activate-cmd >>
  #           make clean
  #           make package-build
  #     - persist_to_workspace:
  #         root: wheelhouse
  #         paths:
  #           - "*.whl"

  # build-package-macos-py36:
  #   macos:
  #       xcode: "10.0.0"
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - *bootstrap-macos
  #     - *bootstrap-venv-py36
  #     - run:
  #         name: build package
  #         command: |
  #           . venv-py36/bin/activate
  #           make clean
  #           make package-build
  #     - persist_to_workspace:
  #         root: wheelhouse
  #         paths:
  #           - "*.whl"

  # test-package-macos-py35:
  #   macos:
  #       xcode: "10.0.0"
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - *bootstrap-macos
  #     - *bootstrap-venv-py35
  #     - attach_workspace:
  #         at: wheelhouse
  #     - run:
  #         name: Test package
  #         command: |
  #           . venv-py35/bin/activate
  #           make clean
  #           make package-test

  # test-package-macos-py36:
  #   macos:
  #       xcode: "10.0.0"
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - *bootstrap-macos
  #     - *bootstrap-venv-py36
  #     - attach_workspace:
  #         at: wheelhouse
  #     - run:
  #         name: Test package
  #         command: |
  #           . venv-py36/bin/activate
  #           make clean
  #           make package-test

  # test-package-linux:
  #   docker:
  #     - image: ubuntu:19.04
  #   working_directory: ~/repo
  #   steps:
  #     - run:
  #         name: certs
  #         command: |
  #           apt update
  #           apt install -y ca-certificates
  #     - checkout
  #     - attach_workspace:
  #         at: artifacts
  #     - *bootstrap

workflows:
  version: 2
  build-package-py35:
    jobs:
      - test-macos:
        pyenv-activate-cmd: venv-py35/bin/activate
        tensorflow-version: 1.13.1
      # - test-macos-py35
      # - build-package-macos-py35:
      #     requires:
      #       - test-macos-py35
      # - test-package-macos-py35:
      #     requires:
      #       - build-package-macos-py35
  build-package-py36:
    jobs:
      - test-macos:
        pyenv-activate-cmd: venv-py36/bin/activate
        tensorflow-version: 1.13.1

      # - test-macos-py36
      # - build-package-macos-py36:
      #     requires:
      #       - test-macos-py36
      # - test-package-macos-py36:
      #     requires:
      #       - build-package-macos-py36
